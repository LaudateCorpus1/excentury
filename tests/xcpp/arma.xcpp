"""Armadillo Test

Collection of sample functions showing how to use the
[Armadillo](http://arma.sourceforge.net/) library.

"""
#include <armadillo>
#include <xc>

----------------------------------------------------------------------
@def{inverse_det}
    """Find the inverse and determinant of a square matrix using
    the armadillo library."""
    @param{arma::mat, A(2, 2), "input matrix", A(0,0)}
@body[[
    double d = det(A);
    arma::mat Ainv;
    try {
        Ainv = inv(A);
    } catch (std::exception& run_error) {
        excentury::error(run_error.what());
    }
]]
@ret[[
    @ret{Ainv, "Ainv", Ainv(0,0)}
    @ret{d, "detA"}
]]
----------------------------------------------------------------------
@def{qr}
    """Decomposition of X into an orthogonal matrix Q and a right
    triangular matrix R, such that Q*R = X."""
    @param{arma::mat, X(2, 2), "input matrix", X(0,0)}
@body[[
    arma::mat Q, R;
    int status = arma::qr(Q, R, X);
]]
@ret[[
    @ret{Q, "Q", Q(0,0)}
    @ret{R, "R", R(0,0)}
    @ret{status, "status"}
]]
----------------------------------------------------------------------
@def{solve}
    """Solve a system of linear equations, A*X = B, where X is
    unknown; similar functionality to the \\ operator in
    Matlab/Octave, ie. X = A \\ B """
    @param{arma::mat, A(2, 2), "matrix A", A(0,0)}
    @param{arma::mat, B(2, 2), "matrix B", B(0,0)}
@body[[
    arma::mat X;
    try {
        X = arma::solve(A,B);
    } catch (std::exception& run_error) {
        excentury::error(run_error.what());
    }
]]
@ret[[
    @ret{X, "X", X(0,0)}
]]
----------------------------------------------------------------------
